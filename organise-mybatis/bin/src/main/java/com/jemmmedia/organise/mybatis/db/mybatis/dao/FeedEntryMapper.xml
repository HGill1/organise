<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jemmmedia.organise.service.impl.db.mybatis.dao.FeedEntryMapper">
  <resultMap id="BaseResultMap" type="com.jemmmedia.organise.service.impl.db.mybatis.model.FeedEntry">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 29 13:42:10 GMT 2013.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="feed_source_id" jdbcType="BIGINT" property="feedSourceId" />
    <result column="parent_feed" jdbcType="BIT" property="parentFeed" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="published_at" jdbcType="TIMESTAMP" property="publishedAt" />
    <result column="guid" jdbcType="VARCHAR" property="guid" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="main_status" jdbcType="BIT" property="mainStatus" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="reply_id" jdbcType="BIGINT" property="replyId" />
    <result column="assign_to" jdbcType="BIGINT" property="assignTo" />
    <result column="assign_to_dept" jdbcType="BIGINT" property="assignToDept" />
    <result column="last_view_date" jdbcType="TIMESTAMP" property="lastViewDate" />
    <result column="deadline" jdbcType="TIMESTAMP" property="deadline" />
    <result column="follower" jdbcType="INTEGER" property="follower" />
    <result column="urgent_status" jdbcType="BIT" property="urgentStatus" />
    <result column="viewer" jdbcType="INTEGER" property="viewer" />
    <result column="feed_type" jdbcType="INTEGER" property="feedType" />
    <result column="updated_by" jdbcType="BIGINT" property="updatedBy" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.jemmmedia.organise.service.impl.db.mybatis.model.FeedEntry">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 29 13:42:10 GMT 2013.
    -->
    <result column="summary" jdbcType="LONGVARCHAR" property="summary" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 29 13:42:10 GMT 2013.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 29 13:42:10 GMT 2013.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 29 13:42:10 GMT 2013.
    -->
    id, feed_source_id, parent_feed, user_id, author, name, url, published_at, guid, 
    created_at, updated_at, main_status, status, reply_id, assign_to, assign_to_dept, 
    last_view_date, deadline, follower, urgent_status, viewer, feed_type, updated_by
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 29 13:42:10 GMT 2013.
    -->
    summary
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.jemmmedia.organise.service.impl.db.mybatis.model.FeedEntryExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 29 13:42:10 GMT 2013.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from feed_entries
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.jemmmedia.organise.service.impl.db.mybatis.model.FeedEntryExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 29 13:42:10 GMT 2013.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from feed_entries
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 29 13:42:10 GMT 2013.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from feed_entries
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 29 13:42:10 GMT 2013.
    -->
    delete from feed_entries
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.jemmmedia.organise.service.impl.db.mybatis.model.FeedEntryExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 29 13:42:10 GMT 2013.
    -->
    delete from feed_entries
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jemmmedia.organise.service.impl.db.mybatis.model.FeedEntry">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 29 13:42:10 GMT 2013.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into feed_entries (feed_source_id, parent_feed, user_id, 
      author, name, url, 
      published_at, guid, created_at, 
      updated_at, main_status, status, 
      reply_id, assign_to, assign_to_dept, 
      last_view_date, deadline, follower, 
      urgent_status, viewer, feed_type, 
      updated_by, summary)
    values (#{feedSourceId,jdbcType=BIGINT}, #{parentFeed,jdbcType=BIT}, #{userId,jdbcType=BIGINT}, 
      #{author,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{publishedAt,jdbcType=TIMESTAMP}, #{guid,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedAt,jdbcType=TIMESTAMP}, #{mainStatus,jdbcType=BIT}, #{status,jdbcType=INTEGER}, 
      #{replyId,jdbcType=BIGINT}, #{assignTo,jdbcType=BIGINT}, #{assignToDept,jdbcType=BIGINT}, 
      #{lastViewDate,jdbcType=TIMESTAMP}, #{deadline,jdbcType=TIMESTAMP}, #{follower,jdbcType=INTEGER}, 
      #{urgentStatus,jdbcType=BIT}, #{viewer,jdbcType=INTEGER}, #{feedType,jdbcType=INTEGER}, 
      #{updatedBy,jdbcType=BIGINT}, #{summary,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jemmmedia.organise.service.impl.db.mybatis.model.FeedEntry">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 29 13:42:10 GMT 2013.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into feed_entries
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="feedSourceId != null">
        feed_source_id,
      </if>
      <if test="parentFeed != null">
        parent_feed,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="publishedAt != null">
        published_at,
      </if>
      <if test="guid != null">
        guid,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="mainStatus != null">
        main_status,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="replyId != null">
        reply_id,
      </if>
      <if test="assignTo != null">
        assign_to,
      </if>
      <if test="assignToDept != null">
        assign_to_dept,
      </if>
      <if test="lastViewDate != null">
        last_view_date,
      </if>
      <if test="deadline != null">
        deadline,
      </if>
      <if test="follower != null">
        follower,
      </if>
      <if test="urgentStatus != null">
        urgent_status,
      </if>
      <if test="viewer != null">
        viewer,
      </if>
      <if test="feedType != null">
        feed_type,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="summary != null">
        summary,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="feedSourceId != null">
        #{feedSourceId,jdbcType=BIGINT},
      </if>
      <if test="parentFeed != null">
        #{parentFeed,jdbcType=BIT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="publishedAt != null">
        #{publishedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="guid != null">
        #{guid,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="mainStatus != null">
        #{mainStatus,jdbcType=BIT},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="replyId != null">
        #{replyId,jdbcType=BIGINT},
      </if>
      <if test="assignTo != null">
        #{assignTo,jdbcType=BIGINT},
      </if>
      <if test="assignToDept != null">
        #{assignToDept,jdbcType=BIGINT},
      </if>
      <if test="lastViewDate != null">
        #{lastViewDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deadline != null">
        #{deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="follower != null">
        #{follower,jdbcType=INTEGER},
      </if>
      <if test="urgentStatus != null">
        #{urgentStatus,jdbcType=BIT},
      </if>
      <if test="viewer != null">
        #{viewer,jdbcType=INTEGER},
      </if>
      <if test="feedType != null">
        #{feedType,jdbcType=INTEGER},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=BIGINT},
      </if>
      <if test="summary != null">
        #{summary,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jemmmedia.organise.service.impl.db.mybatis.model.FeedEntryExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 29 13:42:10 GMT 2013.
    -->
    select count(*) from feed_entries
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 29 13:42:10 GMT 2013.
    -->
    update feed_entries
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.feedSourceId != null">
        feed_source_id = #{record.feedSourceId,jdbcType=BIGINT},
      </if>
      <if test="record.parentFeed != null">
        parent_feed = #{record.parentFeed,jdbcType=BIT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.publishedAt != null">
        published_at = #{record.publishedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.guid != null">
        guid = #{record.guid,jdbcType=VARCHAR},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mainStatus != null">
        main_status = #{record.mainStatus,jdbcType=BIT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.replyId != null">
        reply_id = #{record.replyId,jdbcType=BIGINT},
      </if>
      <if test="record.assignTo != null">
        assign_to = #{record.assignTo,jdbcType=BIGINT},
      </if>
      <if test="record.assignToDept != null">
        assign_to_dept = #{record.assignToDept,jdbcType=BIGINT},
      </if>
      <if test="record.lastViewDate != null">
        last_view_date = #{record.lastViewDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deadline != null">
        deadline = #{record.deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="record.follower != null">
        follower = #{record.follower,jdbcType=INTEGER},
      </if>
      <if test="record.urgentStatus != null">
        urgent_status = #{record.urgentStatus,jdbcType=BIT},
      </if>
      <if test="record.viewer != null">
        viewer = #{record.viewer,jdbcType=INTEGER},
      </if>
      <if test="record.feedType != null">
        feed_type = #{record.feedType,jdbcType=INTEGER},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=BIGINT},
      </if>
      <if test="record.summary != null">
        summary = #{record.summary,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 29 13:42:10 GMT 2013.
    -->
    update feed_entries
    set id = #{record.id,jdbcType=BIGINT},
      feed_source_id = #{record.feedSourceId,jdbcType=BIGINT},
      parent_feed = #{record.parentFeed,jdbcType=BIT},
      user_id = #{record.userId,jdbcType=BIGINT},
      author = #{record.author,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      published_at = #{record.publishedAt,jdbcType=TIMESTAMP},
      guid = #{record.guid,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      main_status = #{record.mainStatus,jdbcType=BIT},
      status = #{record.status,jdbcType=INTEGER},
      reply_id = #{record.replyId,jdbcType=BIGINT},
      assign_to = #{record.assignTo,jdbcType=BIGINT},
      assign_to_dept = #{record.assignToDept,jdbcType=BIGINT},
      last_view_date = #{record.lastViewDate,jdbcType=TIMESTAMP},
      deadline = #{record.deadline,jdbcType=TIMESTAMP},
      follower = #{record.follower,jdbcType=INTEGER},
      urgent_status = #{record.urgentStatus,jdbcType=BIT},
      viewer = #{record.viewer,jdbcType=INTEGER},
      feed_type = #{record.feedType,jdbcType=INTEGER},
      updated_by = #{record.updatedBy,jdbcType=BIGINT},
      summary = #{record.summary,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 29 13:42:10 GMT 2013.
    -->
    update feed_entries
    set id = #{record.id,jdbcType=BIGINT},
      feed_source_id = #{record.feedSourceId,jdbcType=BIGINT},
      parent_feed = #{record.parentFeed,jdbcType=BIT},
      user_id = #{record.userId,jdbcType=BIGINT},
      author = #{record.author,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      published_at = #{record.publishedAt,jdbcType=TIMESTAMP},
      guid = #{record.guid,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      main_status = #{record.mainStatus,jdbcType=BIT},
      status = #{record.status,jdbcType=INTEGER},
      reply_id = #{record.replyId,jdbcType=BIGINT},
      assign_to = #{record.assignTo,jdbcType=BIGINT},
      assign_to_dept = #{record.assignToDept,jdbcType=BIGINT},
      last_view_date = #{record.lastViewDate,jdbcType=TIMESTAMP},
      deadline = #{record.deadline,jdbcType=TIMESTAMP},
      follower = #{record.follower,jdbcType=INTEGER},
      urgent_status = #{record.urgentStatus,jdbcType=BIT},
      viewer = #{record.viewer,jdbcType=INTEGER},
      feed_type = #{record.feedType,jdbcType=INTEGER},
      updated_by = #{record.updatedBy,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jemmmedia.organise.service.impl.db.mybatis.model.FeedEntry">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 29 13:42:10 GMT 2013.
    -->
    update feed_entries
    <set>
      <if test="feedSourceId != null">
        feed_source_id = #{feedSourceId,jdbcType=BIGINT},
      </if>
      <if test="parentFeed != null">
        parent_feed = #{parentFeed,jdbcType=BIT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="publishedAt != null">
        published_at = #{publishedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="guid != null">
        guid = #{guid,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="mainStatus != null">
        main_status = #{mainStatus,jdbcType=BIT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="replyId != null">
        reply_id = #{replyId,jdbcType=BIGINT},
      </if>
      <if test="assignTo != null">
        assign_to = #{assignTo,jdbcType=BIGINT},
      </if>
      <if test="assignToDept != null">
        assign_to_dept = #{assignToDept,jdbcType=BIGINT},
      </if>
      <if test="lastViewDate != null">
        last_view_date = #{lastViewDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deadline != null">
        deadline = #{deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="follower != null">
        follower = #{follower,jdbcType=INTEGER},
      </if>
      <if test="urgentStatus != null">
        urgent_status = #{urgentStatus,jdbcType=BIT},
      </if>
      <if test="viewer != null">
        viewer = #{viewer,jdbcType=INTEGER},
      </if>
      <if test="feedType != null">
        feed_type = #{feedType,jdbcType=INTEGER},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=BIGINT},
      </if>
      <if test="summary != null">
        summary = #{summary,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jemmmedia.organise.service.impl.db.mybatis.model.FeedEntry">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 29 13:42:10 GMT 2013.
    -->
    update feed_entries
    set feed_source_id = #{feedSourceId,jdbcType=BIGINT},
      parent_feed = #{parentFeed,jdbcType=BIT},
      user_id = #{userId,jdbcType=BIGINT},
      author = #{author,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      published_at = #{publishedAt,jdbcType=TIMESTAMP},
      guid = #{guid,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      main_status = #{mainStatus,jdbcType=BIT},
      status = #{status,jdbcType=INTEGER},
      reply_id = #{replyId,jdbcType=BIGINT},
      assign_to = #{assignTo,jdbcType=BIGINT},
      assign_to_dept = #{assignToDept,jdbcType=BIGINT},
      last_view_date = #{lastViewDate,jdbcType=TIMESTAMP},
      deadline = #{deadline,jdbcType=TIMESTAMP},
      follower = #{follower,jdbcType=INTEGER},
      urgent_status = #{urgentStatus,jdbcType=BIT},
      viewer = #{viewer,jdbcType=INTEGER},
      feed_type = #{feedType,jdbcType=INTEGER},
      updated_by = #{updatedBy,jdbcType=BIGINT},
      summary = #{summary,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jemmmedia.organise.service.impl.db.mybatis.model.FeedEntry">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 29 13:42:10 GMT 2013.
    -->
    update feed_entries
    set feed_source_id = #{feedSourceId,jdbcType=BIGINT},
      parent_feed = #{parentFeed,jdbcType=BIT},
      user_id = #{userId,jdbcType=BIGINT},
      author = #{author,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      published_at = #{publishedAt,jdbcType=TIMESTAMP},
      guid = #{guid,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      main_status = #{mainStatus,jdbcType=BIT},
      status = #{status,jdbcType=INTEGER},
      reply_id = #{replyId,jdbcType=BIGINT},
      assign_to = #{assignTo,jdbcType=BIGINT},
      assign_to_dept = #{assignToDept,jdbcType=BIGINT},
      last_view_date = #{lastViewDate,jdbcType=TIMESTAMP},
      deadline = #{deadline,jdbcType=TIMESTAMP},
      follower = #{follower,jdbcType=INTEGER},
      urgent_status = #{urgentStatus,jdbcType=BIT},
      viewer = #{viewer,jdbcType=INTEGER},
      feed_type = #{feedType,jdbcType=INTEGER},
      updated_by = #{updatedBy,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <resultMap id="FeedResultMap" type="com.jemmmedia.organise.service.impl.bean.FeedEntryBean">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="feedSourceId" jdbcType="BIGINT" property="feedSourceId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="taskCreatorEmail" jdbcType="VARCHAR" property="taskCreatorEmail" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="attachmentCount" jdbcType="INTEGER" property="attachmentCount" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="summary" jdbcType="LONGVARCHAR" property="summary" />
    <result column="firstName" jdbcType="VARCHAR" property="firstName" />
    <result column="lastName" jdbcType="VARCHAR" property="lastName" />
    <result column="profileImage" jdbcType="VARCHAR" property="profileImage" />
    <result column="job_title" jdbcType="VARCHAR" property="jobTitle" />
    <result column="regionName" jdbcType="VARCHAR" property="regionName" />
    <result column="feedSourceName" jdbcType="VARCHAR" property="feedSourceName" />
    <result column="statusName" jdbcType="VARCHAR" property="statusName" />
    <result column="assignToName" jdbcType="VARCHAR" property="assignToName" />
    <result column="assignToEmail" jdbcType="VARCHAR" property="assignToEmail" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="published_at" jdbcType="TIMESTAMP" property="publishedAt" />
    <result column="guid" jdbcType="VARCHAR" property="guid" />
    <result column="createdAt" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updatedAt" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="mainStatus" jdbcType="BIT" property="mainStatus" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="replyId" jdbcType="BIGINT" property="replyId" />
    <result column="assignTo" jdbcType="BIGINT" property="assignTo" />
    <result column="deadline" jdbcType="DATE" property="date" />
    <result column="deadline" jdbcType="DATE" property="deadline" />
    <result column="follower" jdbcType="INTEGER" property="follower" />
    <result column="urgent_status" jdbcType="BIT" property="urgentStatus" />
    <result column="viewer" jdbcType="INTEGER" property="viewer" />
    <result column="taskUpdateEmailNotify" jdbcType="BIT" property="taskUpdateEmailNotify" />
    <result column="deptId" jdbcType="INTEGER" property="deptId" />
    <result column="deptName" jdbcType="VARCHAR" property="deptName" />
    <!--
    <collection ofType="com.jemmmedia.organise.service.impl.bean.FeedEntryBean" property="replyTasks">
            <id column="id_2" jdbcType="BIGINT" property="id" />
            <result column="name_2" jdbcType="VARCHAR" property="name" />
            <result column="summary_2" jdbcType="LONGVARCHAR" property="summary" />	       	
      </collection> -->    
    <collection ofType="com.jemmmedia.organise.service.impl.db.mybatis.model.FileAttachment" property="fileAttachment">
    	<result column="attachmentId" property="id" />
    	<result column="fileName" property="name" />
    	<result column="fileExtension" property="fileExtension" />
    </collection>
  </resultMap>

  
 <sql id="Common_Column_List">
   select distinct fe.id, fe.name,fs.name as feedSourceName,fe.feed_source_id as feedSourceId, fs.colour, fe.deadline, fe.follower, fe.feed_type as feedType,
	fe.url, fe.user_id as userId, author, summary,fe.created_at as createdAt, fe.main_status as mainStatus, fe.status, fe.urgent_status as urgentStatus,fe.assign_to as assignTo,fe.assign_to_dept as assignToDept,
	u.first_name as firstName,u.last_name as lastName,u.profileImage, u.email as taskCreatorEmail, 
	concat(u2.first_name,' ',u2.last_name) as assignToName, u2.email as assignToEmail, u2.task_update_email as taskUpdateEmailNotify,
	s.name as statusName, 
	r.region_name as regionName,d.id as deptId, d.name as deptName,
	(select count(attachment_id) from feed_entries_attachments where feed_entry_id = fe.id) as attachmentCount 
	from feed_entries fe 
	inner join 
	users u on (fe.user_id = u.id) join regions r on u.region_id = r.id 
	left join
	users u2 on (fe.assign_to = u2.id)
	inner join
	feed_sources fs on fs.id=fe.feed_source_id
	left join
	status s on s.id = fe.status
	left join dept_users du on du.user_id = fe.assign_to left join dept d on d.id = fe.assign_to_dept 
  </sql>
  
  <sql id="Joins_For_Tasks_Count">
  	inner join 
	users u on (fe.user_id = u.id) join regions r on u.region_id = r.id 
	left join
	users u2 on (fe.assign_to = u2.id)
	left join 
	feed_entry_child fec on fe.id = fec.feed_id	
	inner join
	feed_sources fs on fs.id=fe.feed_source_id
	left join
	status s on s.id = fe.status
  </sql>
  
   <select id="multiSourceFilterFeeds" parameterType="map" resultType="com.jemmmedia.organise.service.impl.bean.FeedEntryBean">
  	select fe.id, fe.user_id,fe.name,fs.name as feedSourceName,fe.feed_source_id as feedSourceId,fs.colour, fe.follower, fe.feed_type as feedType,
	fe.url, author, summary,fe.created_at as createdAt, fe.main_status as mainStatus, fe.status,fe.urgent_status as urgentStatus,
	u.first_name as firstName,u.last_name as lastName,u.profileImage, concat(u2.firstName,' ',u2.lastName) as assignToName,
	s.name as statusName, 
	r.region_name as regionName,
	(select count(attachment_id) from feed_entries_attachments where feed_entry_id = fe.id) as attachmentCount
	from feed_entries fe 
	inner join 
	users u on (fe.user_id = u.id) join regions r on u.region_id = r.id 
	left join
	users u2 on (fe.assign_to = u2.id)
	left join 
	feed_entry_child fec on fe.id = fec.feed_id	
	inner join
	feed_sources fs on fs.id=fe.feed_source_id join feeds_users fu on fu.cat_id=fs.id and fu.user_id=#{userId,jdbcType=INTEGER}
	left join
	status s on s.id = fe.status
	where  fec.feed_id is null order by fe.created_at desc limit #{pageStart,jdbcType=INTEGER}, 10
  </select>
 
  
   <!--
   <select id="selectFeeds" parameterType="map" resultMap="FeedResultMap">  	
         select fe.id, fe.user_id,fe.name, fe.user_id as userId, fe.summary,fe.assign_to as assignTo,
       fer.id, fer.user_id,fer.name,fer.summary
       from feed_entries fe
       left join feed_entry_child fec on fec.feed_id = fe.id  
           left join feed_entries fer on fer.id = fec.parent_id 
           where fe.status != 4 AND fe.feed_type = 0 
       order by fe.created_at desc  limit 0,10     	
       </select> -->
   


 <select id="selectFeeds" parameterType="map" resultType="com.jemmmedia.organise.service.impl.bean.FeedEntryBean">
      <include refid="Common_Column_List" />
     where  fe.parent_feed = true AND status != 4 AND fe.feed_type = 0 
     AND fe.feed_source_id in(select id from feed_sources fs 
     inner join feed_sources_users fsu on fs.id= fsu.feed_source_id where fsu.user_id=#{userId,jdbcType=INTEGER})
     order by fe.created_at desc limit #{start}, 15
   </select>
 
  
  <select id="searchFeeds" parameterType="map" resultType="com.jemmmedia.organise.service.impl.bean.FeedEntryBean">
	<include refid="Common_Column_List" />
	left join	feed_entries_attachments fea on fea.feed_entry_id = fe.id left join file_attachments fa on fa.id = fea.attachment_id 
	where  fe.parent_feed = true AND (summary like #{searchText}  or fe.name like #{searchText}) AND fe.feed_source_id in(select id from feed_sources fs 
	inner join feed_sources_users fsu on fs.id= fsu.feed_source_id where fsu.user_id=#{userId,jdbcType=INTEGER})
	order by fe.created_at desc limit #{start}, 15
  </select> 
  
  <select id="selectFollowingTasks" parameterType="map" resultType="com.jemmmedia.organise.service.impl.bean.FeedEntryBean">
	<include refid="Common_Column_List" />
	where  fe.parent_feed = true and follower = #{followerId,jdbcType=INTEGER} and feed_source_id = #{feedSourceId,jdbcType=INTEGER}
	order by fe.created_at desc limit #{start}, 15
  </select> 
  
  <select id="selectRecentlyViewed" parameterType="map" resultType="com.jemmmedia.organise.service.impl.bean.FeedEntryBean">
	<include refid="Common_Column_List" />
	where  fe.parent_feed = true and viewer = #{viewerId,jdbcType=INTEGER} and fe.id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectAssignedTask" parameterType="map" resultType="com.jemmmedia.organise.service.impl.bean.FeedEntryBean">
	<include refid="Common_Column_List" />
	where  fe.parent_feed = true and fe.assign_to = #{assignTo,jdbcType=INTEGER} and fe.id = #{id,jdbcType=INTEGER}
  </select> 
  
  <select id="filterFeeds" parameterType="com.jemmmedia.organise.service.impl.bean.FeedEntryBean" resultType="com.jemmmedia.organise.service.impl.bean.FeedEntryBean">
  	<include refid="Common_Column_List" />
	where  fe.parent_feed = true AND fe.feed_source_id in(select id from feed_sources fs 
    inner join feed_sources_users fsu on fs.id= fsu.feed_source_id where fsu.user_id=#{loggedInUserId,jdbcType=INTEGER})    
    <if test="assignTo != 0">
  		AND assign_to = #{assignTo,jdbcType=INTEGER}
  	</if>
  	<if test="status != 0">
  		AND status = #{status,jdbcType=INTEGER}
  	</if>  	
  	<if test="status != 4">
  		AND status != 4
  	</if>
  	<if test="urgentStatus == true ">
  		AND urgent_status = true
  	</if>
  	<if test="userId != null">
  		AND fe.user_id = #{userId,jdbcType=INTEGER}
  	</if>     
	 <choose>
        <when test="feedSourceId != 0">
              	 AND (feed_source_id = #{feedSourceId,jdbcType=INTEGER} or fs.parent_id = #{feedSourceId,jdbcType=INTEGER}) 
         </when>
         <otherwise>
             	AND fe.feed_type = 0
     	</otherwise>
     </choose>
    <if test="selectedTopicsList != null">
 	 AND (feed_source_id in
 		<foreach close=")" collection="selectedTopicsList" index="index" item="item" open="(" separator=",">
      		#{item}
   		 </foreach>
   		 or fs.parent_id = #{feedSourceId,jdbcType=INTEGER})
 	</if>  	 
  	<choose>
        <when test="orderBy == 0">
  			order by fe.created_at desc
  		</when>
  		<otherwise>
  			order by fe.created_at 
  		</otherwise>
  	</choose>
  	 
  	 limit #{pageStart}, 15
  </select> 
  
  
  <select id="selectChildFeeds" parameterType="string" resultMap="FeedResultMap">  	
    select fe.id, fe.user_id,fe.name,fs.name as feedSourceName,fe.feed_source_id as feedSourceId, 
	fe.url, author, summary,fe.created_at as createdAt, fe.status, 
	u.first_name as firstName,u.last_name as lastName, job_title, profileImage, 
	s.name as statusName, 
	r.region_name as regionName,
	(select count(attachment_id) from feed_entries_attachments where feed_entry_id = fe.id) as attachmentCount, 
	fa.id as attachmentId, fa.name as fileName , fa.file_extension as fileExtension 
	from feed_entries fe 
	inner join 
	users u on fe.user_id = u.id join regions r on u.region_id = r.id
	inner join
	feed_sources fs on fs.id=fe.feed_source_id
	left join
	status s on s.id = fe.status
	left join	feed_entries_attachments fea on fea.feed_entry_id = fe.id left join file_attachments fa on fa.id = fea.attachment_id 	
	where fe.id in (select feed_id from feed_entry_child where parent_id=#{id,jdbcType=INTEGER})  
    order by fe.created_at desc 
  </select>
  
   <select id="selectReplyDetail" parameterType="string" resultMap="FeedResultMap">  	
    select fe.id, fe.user_id,fe.name,fs.name as feedSourceName,fe.feed_source_id as feedSourceId, 
	fe.url, author, summary,fe.created_at as createdAt, fe.status, 
	u.first_name as firstName,u.last_name as lastName,job_title,profileImage,
	s.name as statusName, 
	r.region_name as regionName,
	(select count(attachment_id) from feed_entries_attachments where feed_entry_id = fe.id) as attachmentCount,
	fa.id as attachmentId, fa.name as fileName, fa.file_extension as fileExtension  
	from feed_entries fe 
	inner join 
	users u on fe.user_id = u.id join regions r on u.region_id = r.id
	inner join
	feed_sources fs on fs.id=fe.feed_source_id
	left join
	status s on s.id = fe.status
	left join	feed_entries_attachments fea on fea.feed_entry_id = fe.id left join file_attachments fa on fa.id = fea.attachment_id
	where fe.id in (select feed_id from feed_entry_child where parent_id=#{id,jdbcType=INTEGER})  
    order by fe.created_at desc limit 0, 15	
  </select>
  
  <select id="updateRemaining" parameterType="map" resultType="int">
   select count(*) from feed_entries fe left join feed_entry_child fec on fe.id = fec.feed_id
 	where fec.feed_id is null and fe.feed_type = 0 AND status = 3    
   <if test="feedSourceId != 0">
  		AND feed_source_id = #{feedSourceId,jdbcType=INTEGER}
  	</if> 
  	<if test="assignTo != 0">
  		AND assign_to = #{assignTo,jdbcType=INTEGER}
  	</if>
  </select>
  
  <select id="checkUpdates" parameterType="string" resultType="byte">
   	SELECT count(*)
	FROM feed_entries fe 
	left join feed_entry_child fec on fe.id = fec.feed_id
	WHERE created_at &gt; (NOW() - INTERVAL 25 second) and fec.feed_id is null and fe.feed_type = 0 and assign_to = #{loggedInUserId,jdbcType=INTEGER};
  </select>
  
  <update id="updateMainStatus" parameterType="map"> 
   update feed_entries set status = #{status}, updated_at=#{updatedAt}, updated_by=#{updatedBy} 
   <if test="urgentStatus==true">
   		,urgent_status = #{urgentStatus}
   </if>
   <if test="assignTo!=null">
   		,assign_to = #{assignTo}
   </if>
   <if test="assignToDept!=null">
   		,assign_to_dept = #{assignToDept}
   </if>
   where id = #{parentId} 
  </update>
  
  <update id="updateFollow" parameterType="map"> 
   update feed_entries set follower = #{fId,jdbcType=INTEGER} where id = #{id,jdbcType=INTEGER}  
  </update>
  
  <update id="updateRecentlyViewed" parameterType="map">
  	update feed_entries set last_view_date =  now(), viewer = #{viewerId,jdbcType=INTEGER} where id= #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectlastViewedDate" parameterType="string" resultType="com.jemmmedia.organise.service.impl.bean.FeedEntryBean">
     select id, name from feed_entries where viewer = #{userId,jdbcType=INTEGER} order by last_view_date desc limit 0,5;
  </select>
  
  <select id="displayTodaysTasksPending" parameterType="map" resultType="com.jemmmedia.organise.service.impl.bean.FeedEntryBean">
	<include refid="Common_Column_List" />
	where fe.parent_feed = true and datediff(CURDATE(),Date(fe.created_at)) = 0 
  	and assign_to=#{userId,jdbcType=INTEGER} and status!=4
  	order by fe.created_at desc limit #{start}, 15;
  </select> 
  
  <select id="todaysTasksPending" parameterType="string" resultType="int">
  	select count(*) from feed_entries fe 
  	left join feed_entry_child fec on fe.id = fec.feed_id
  	where datediff(CURDATE(),Date(fe.created_at)) = 0 and fec.feed_id is null
  	and assign_to=#{userId,jdbcType=INTEGER} and status!=4;
  </select>
  
  <select id="displayOldTasksPending" parameterType="map" resultType="com.jemmmedia.organise.service.impl.bean.FeedEntryBean">
	<include refid="Common_Column_List" />
	where fe.parent_feed = true and datediff(CURDATE(),Date(deadline)) &gt; 0
  	and assign_to=#{userId,jdbcType=INTEGER} and status!=4
  	order by fe.created_at desc limit #{start}, 15;
  </select> 
  
  <select id="oldTasksPending" parameterType="string" resultType="int">
  	select count(*) from feed_entries fe  
  	inner join 
	users u on (fe.user_id = u.id) join regions r on u.region_id = r.id 
	left join
	users u2 on (fe.assign_to = u2.id)
	left join 
	feed_entry_child fec on fe.id = fec.feed_id	
	inner join
	feed_sources fs on fs.id=fe.feed_source_id
	left join
	status s on s.id = fe.status	
  	where datediff(CURDATE(),Date(deadline)) &gt; 0 and fec.feed_id is null
  	and assign_to=#{userId,jdbcType=INTEGER} and status!=4;
  </select>
  
   <select id="displayUrgentTasks" parameterType="map" resultType="com.jemmmedia.organise.service.impl.bean.FeedEntryBean">
	<include refid="Common_Column_List" />
	where assign_to=#{userId,jdbcType=INTEGER} and fe.parent_feed = true 
  	and urgent_status = true and status!=4
  	order by fe.created_at desc limit #{start}, 15;
  </select>
  
  <select id="urgentTasks" parameterType="string" resultType="int">
  	select count(*) from feed_entries fe
  	left join feed_entry_child fec on fe.id = fec.feed_id  
  	where assign_to=#{userId,jdbcType=INTEGER} and fec.feed_id is null 
  	and urgent_status = true and status!=4;
  </select>
  
   <select id="displayTodaysDueTasks" parameterType="map" resultType="com.jemmmedia.organise.service.impl.bean.FeedEntryBean">
	<include refid="Common_Column_List" />
	where datediff(CURDATE(),Date(deadline)) = 0 and fe.parent_feed = true
  	and	assign_to=#{userId,jdbcType=INTEGER} and status!=4
  	order by fe.created_at desc limit #{start}, 15;
  </select>
  
  <select id="todaysDueTasks" parameterType="string" resultType="int">
  	select count(*) from feed_entries fe 
  	left join feed_entry_child fec on fe.id = fec.feed_id
  	where datediff(CURDATE(),Date(deadline)) = 0 and fec.feed_id is null
  	and	assign_to=#{userId,jdbcType=INTEGER} and status!=4;
  </select>
  
  <select id="displayAllMyTasks" parameterType="map" resultType="com.jemmmedia.organise.service.impl.bean.FeedEntryBean">
  
  select * from (
   	
	<include refid="Common_Column_List" />
	where fe.parent_feed = true
  	and	assign_to=#{userId,jdbcType=INTEGER} and status!=4
  	
  	<if test="feedSourceId != 0">
         AND (feed_source_id = #{feedSourceId,jdbcType=INTEGER} or fs.parent_id = #{feedSourceId,jdbcType=INTEGER}) 
    </if>
    
    <if test="deptIds.size() &gt;0">
    union
    
    <include refid="Common_Column_List" />
    where fe.parent_feed = true
  	and	assign_to_dept in
  	<foreach close=")" collection="deptIds" index="index" item="item" open="(" separator=",">
      		#{item.id}
    </foreach>
  	 and status!=4
  	 </if>
  	 ) X
    
  	  	
  	<choose>
        <when test="orderBy == 0">
  			order by X.createdAt desc
  		</when>
  		<otherwise>
  			order by X.createdAt 
  		</otherwise>
  	</choose>
  	limit #{start}, 15
  </select>
  
  <select id="selectTasksCount" parameterType="string" resultType="string">
  
    select concat('displayOldTasksPending-',cast((count(fe.id)) as CHAR)) as taskCount  from feed_entries fe
  	<include refid="Joins_For_Tasks_Count" />
  	where datediff(CURDATE(),Date(deadline)) &gt; 0 and fec.feed_id is null
  	and assign_to=#{userId,jdbcType=INTEGER} and status!=4
  	
  	union all
  	
  	select concat('displayTodaysDueTasks-',cast((count(fe.id)) as CHAR)) as taskCount  from feed_entries fe 
  	<include refid="Joins_For_Tasks_Count" />
  	where datediff(CURDATE(),Date(deadline)) = 0 and fec.feed_id is null
  	and	assign_to=#{userId,jdbcType=INTEGER} and status!=4
  	
  	union all

    select concat('displayUrgentTasks-',cast((count(fe.id)) as CHAR)) as taskCount  from feed_entries fe
  	<include refid="Joins_For_Tasks_Count" />  
  	where assign_to=#{userId,jdbcType=INTEGER} and fec.feed_id is null 
  	and urgent_status = true and status!=4

  	
  	union all
      
    select concat('displayTodaysTasksPending-',cast((count(fe.id)) as CHAR)) as taskCount  from feed_entries fe 
  	<include refid="Joins_For_Tasks_Count" />
  	where datediff(CURDATE(),Date(fe.created_at)) = 0 and fec.feed_id is null
  	and assign_to=#{userId,jdbcType=INTEGER} and status!=4
  	
  	union all
      
    select concat('displayAllMyTasks-',cast((count(fe.id)) as CHAR)) as taskCount  from feed_entries fe 
  	<include refid="Joins_For_Tasks_Count" />
  	where fe.parent_feed = true
  	and	assign_to=#{userId,jdbcType=INTEGER} and status!=4  
  
  </select>
  
  <select id="tasksCompleted" parameterType="string" resultType="int"> 
  	select count(fe.id) as numberOfTasks 
  	from feed_entries fe 
  	inner join users u on fe.updated_by = u.id 
    where user_type=0 and status=4 and  u.group_id = #{groupId,jdbcType=BIGINT} 
  
  </select>
  
  <select id="tasksOpen" parameterType="string" resultType="int">
  
  	select count(fe.id) as numberOfTasks 
  	from feed_entries fe 
  	inner join users u on fe.user_id = u.id 
  	left join feed_entry_child fec on fe.id = fec.feed_id
    where user_type=0 and status!=4 and fec.feed_id is null and  u.group_id = #{groupId,jdbcType=BIGINT} 
  
  </select>
  
  <select id="tasksPending" parameterType="string" resultType="int">
  
  	select count(fe.id) as numberOfTasks 
  	from feed_entries fe 
  	inner join users u on fe.updated_by = u.id 
    where user_type=0 and status=3 and  u.group_id = #{groupId,jdbcType=BIGINT} 
  
  </select>
  
   <select id="commentsCount" parameterType="string" resultType="int">
  
  	select count(fe.id) as numberOfComments
  	from feed_entries fe 
	inner join users u on fe.user_id = u.id 
    where user_type=0 and  u.group_id = #{groupId,jdbcType=BIGINT} 
  
  </select>
  
  <select id="selectTaskCreatedByUsers" parameterType="map" resultType="com.jemmmedia.organise.service.impl.bean.FeedEntryBean">
  	select count(fe.id) as numberOfTasks, u.first_name as firstName, u.last_name as lastName,  Date(fe.created_at) as createdAt 
	from feed_entries fe 
	left join feed_entry_child fec on fe.id = fec.feed_id 
	inner join users u on fe.user_id = u.id 
	where user_type=0 and fec.feed_id is null and datediff(CURDATE(),Date(fe.created_at)) &lt; #{value,jdbcType=INTEGER} and u.group_id = #{groupId,jdbcType=BIGINT}
	group by createdAt,email order by numberOfTasks desc
  </select>
  
   <select id="selectTaskCompletedByUsers" parameterType="map" resultType="com.jemmmedia.organise.service.impl.bean.FeedEntryBean">
  	select count(fe.id) as numberOfTasks, u.first_name as firstName, u.last_name as lastName,  Date(fe.updated_at) as updatedAt 
  	from feed_entries fe 
  	inner join users u on fe.updated_by = u.id 
    where user_type=0 and status=4 and datediff(CURDATE(),Date(fe.updated_at)) &lt; #{value,jdbcType=INTEGER} and u.group_id = #{groupId,jdbcType=BIGINT} 
    group by updatedAt,email order by numberOfTasks desc
  </select>
  
  
  <select id="selectTaskAssignedToUsers" parameterType="map" resultType="com.jemmmedia.organise.service.impl.bean.FeedEntryBean">
  	select count(fe.id) as numberOfTasks, u.first_name as firstName, u.last_name as lastName,  Date(fe.created_at) as createdAt from 
  	feed_entries fe 
  	left join feed_entry_child fec on fe.id = fec.feed_id
  	inner join users u on fe.assign_to = u.id 
	where user_type=0 and fec.feed_id is null and datediff(CURDATE(),Date(fe.created_at)) &lt; #{value,jdbcType=INTEGER} and u.group_id = #{groupId,jdbcType=BIGINT}
	group by createdAt,email order by numberOfTasks desc
  </select>
  
  
</mapper>