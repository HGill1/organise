<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jemmmedia.organise.service.impl.db.mybatis.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.jemmmedia.organise.service.impl.db.mybatis.model.User">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 04 15:35:42 BST 2013.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="profileImage" jdbcType="VARCHAR" property="profileimage" />
    <result column="crypted_password" jdbcType="VARCHAR" property="cryptedPassword" />
    <result column="password_salt" jdbcType="VARCHAR" property="passwordSalt" />
    <result column="persistence_token" jdbcType="VARCHAR" property="persistenceToken" />
    <result column="region_id" jdbcType="BIGINT" property="regionId" />
    <result column="job_title" jdbcType="VARCHAR" property="jobTitle" />
    <result column="login_count" jdbcType="INTEGER" property="loginCount" />
    <result column="failed_login_count" jdbcType="INTEGER" property="failedLoginCount" />
    <result column="last_request_at" jdbcType="TIMESTAMP" property="lastRequestAt" />
    <result column="current_login_at" jdbcType="TIMESTAMP" property="currentLoginAt" />
    <result column="last_login_at" jdbcType="TIMESTAMP" property="lastLoginAt" />
    <result column="current_login_ip" jdbcType="VARCHAR" property="currentLoginIp" />
    <result column="last_login_ip" jdbcType="VARCHAR" property="lastLoginIp" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="creator_id" jdbcType="INTEGER" property="creatorId" />
    <result column="updater_id" jdbcType="INTEGER" property="updaterId" />
    <result column="first_name" jdbcType="VARCHAR" property="firstName" />
    <result column="last_name" jdbcType="VARCHAR" property="lastName" />
    <result column="user_logged_in" jdbcType="TINYINT" property="userLoggedIn" />
    <result column="user_type" jdbcType="BIGINT" property="userType" />
    <result column="group_id" jdbcType="BIGINT" property="groupId" />
    <result column="task_add_email" jdbcType="BIT" property="taskAddEmail" />
    <result column="task_update_email" jdbcType="BIT" property="taskUpdateEmail" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 04 15:35:42 BST 2013.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 04 15:35:42 BST 2013.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 04 15:35:42 BST 2013.
    -->
    id, username, email, profileImage, crypted_password, password_salt, persistence_token, 
    region_id, job_title, login_count, failed_login_count, last_request_at, current_login_at, 
    last_login_at, current_login_ip, last_login_ip, created_at, updated_at, creator_id, 
    updater_id, first_name, last_name, user_logged_in, user_type, group_id, task_add_email, 
    task_update_email
  </sql>
  <select id="selectByExample" parameterType="com.jemmmedia.organise.service.impl.db.mybatis.model.UserExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 04 15:35:42 BST 2013.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 04 15:35:42 BST 2013.
    -->
    select 
    <include refid="Base_Column_List" />
    from users
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 04 15:35:42 BST 2013.
    -->
    delete from users
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.jemmmedia.organise.service.impl.db.mybatis.model.UserExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 04 15:35:42 BST 2013.
    -->
    delete from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jemmmedia.organise.service.impl.db.mybatis.model.User">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 04 15:35:42 BST 2013.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into users (username, email, profileImage, 
      crypted_password, password_salt, persistence_token, 
      region_id, job_title, login_count, 
      failed_login_count, last_request_at, current_login_at, 
      last_login_at, current_login_ip, last_login_ip, 
      created_at, updated_at, creator_id, 
      updater_id, first_name, last_name, 
      user_logged_in, user_type, group_id, 
      task_add_email, task_update_email)
    values (#{username,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{profileimage,jdbcType=VARCHAR}, 
      #{cryptedPassword,jdbcType=VARCHAR}, #{passwordSalt,jdbcType=VARCHAR}, #{persistenceToken,jdbcType=VARCHAR}, 
      #{regionId,jdbcType=BIGINT}, #{jobTitle,jdbcType=VARCHAR}, #{loginCount,jdbcType=INTEGER}, 
      #{failedLoginCount,jdbcType=INTEGER}, #{lastRequestAt,jdbcType=TIMESTAMP}, #{currentLoginAt,jdbcType=TIMESTAMP}, 
      #{lastLoginAt,jdbcType=TIMESTAMP}, #{currentLoginIp,jdbcType=VARCHAR}, #{lastLoginIp,jdbcType=VARCHAR}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, #{creatorId,jdbcType=INTEGER}, 
      #{updaterId,jdbcType=INTEGER}, #{firstName,jdbcType=VARCHAR}, #{lastName,jdbcType=VARCHAR}, 
      #{userLoggedIn,jdbcType=TINYINT}, #{userType,jdbcType=BIGINT}, #{groupId,jdbcType=BIGINT}, 
      #{taskAddEmail,jdbcType=BIT}, #{taskUpdateEmail,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.jemmmedia.organise.service.impl.db.mybatis.model.User">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 04 15:35:42 BST 2013.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="profileimage != null">
        profileImage,
      </if>
      <if test="cryptedPassword != null">
        crypted_password,
      </if>
      <if test="passwordSalt != null">
        password_salt,
      </if>
      <if test="persistenceToken != null">
        persistence_token,
      </if>
      <if test="regionId != null">
        region_id,
      </if>
      <if test="jobTitle != null">
        job_title,
      </if>
      <if test="loginCount != null">
        login_count,
      </if>
      <if test="failedLoginCount != null">
        failed_login_count,
      </if>
      <if test="lastRequestAt != null">
        last_request_at,
      </if>
      <if test="currentLoginAt != null">
        current_login_at,
      </if>
      <if test="lastLoginAt != null">
        last_login_at,
      </if>
      <if test="currentLoginIp != null">
        current_login_ip,
      </if>
      <if test="lastLoginIp != null">
        last_login_ip,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="creatorId != null">
        creator_id,
      </if>
      <if test="updaterId != null">
        updater_id,
      </if>
      <if test="firstName != null">
        first_name,
      </if>
      <if test="lastName != null">
        last_name,
      </if>
      <if test="userLoggedIn != null">
        user_logged_in,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="taskAddEmail != null">
        task_add_email,
      </if>
      <if test="taskUpdateEmail != null">
        task_update_email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="profileimage != null">
        #{profileimage,jdbcType=VARCHAR},
      </if>
      <if test="cryptedPassword != null">
        #{cryptedPassword,jdbcType=VARCHAR},
      </if>
      <if test="passwordSalt != null">
        #{passwordSalt,jdbcType=VARCHAR},
      </if>
      <if test="persistenceToken != null">
        #{persistenceToken,jdbcType=VARCHAR},
      </if>
      <if test="regionId != null">
        #{regionId,jdbcType=BIGINT},
      </if>
      <if test="jobTitle != null">
        #{jobTitle,jdbcType=VARCHAR},
      </if>
      <if test="loginCount != null">
        #{loginCount,jdbcType=INTEGER},
      </if>
      <if test="failedLoginCount != null">
        #{failedLoginCount,jdbcType=INTEGER},
      </if>
      <if test="lastRequestAt != null">
        #{lastRequestAt,jdbcType=TIMESTAMP},
      </if>
      <if test="currentLoginAt != null">
        #{currentLoginAt,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginAt != null">
        #{lastLoginAt,jdbcType=TIMESTAMP},
      </if>
      <if test="currentLoginIp != null">
        #{currentLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginIp != null">
        #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="updaterId != null">
        #{updaterId,jdbcType=INTEGER},
      </if>
      <if test="firstName != null">
        #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null">
        #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="userLoggedIn != null">
        #{userLoggedIn,jdbcType=TINYINT},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=BIGINT},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=BIGINT},
      </if>
      <if test="taskAddEmail != null">
        #{taskAddEmail,jdbcType=BIT},
      </if>
      <if test="taskUpdateEmail != null">
        #{taskUpdateEmail,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jemmmedia.organise.service.impl.db.mybatis.model.UserExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 04 15:35:42 BST 2013.
    -->
    select count(*) from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 04 15:35:42 BST 2013.
    -->
    update users
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.profileimage != null">
        profileImage = #{record.profileimage,jdbcType=VARCHAR},
      </if>
      <if test="record.cryptedPassword != null">
        crypted_password = #{record.cryptedPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.passwordSalt != null">
        password_salt = #{record.passwordSalt,jdbcType=VARCHAR},
      </if>
      <if test="record.persistenceToken != null">
        persistence_token = #{record.persistenceToken,jdbcType=VARCHAR},
      </if>
      <if test="record.regionId != null">
        region_id = #{record.regionId,jdbcType=BIGINT},
      </if>
      <if test="record.jobTitle != null">
        job_title = #{record.jobTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.loginCount != null">
        login_count = #{record.loginCount,jdbcType=INTEGER},
      </if>
      <if test="record.failedLoginCount != null">
        failed_login_count = #{record.failedLoginCount,jdbcType=INTEGER},
      </if>
      <if test="record.lastRequestAt != null">
        last_request_at = #{record.lastRequestAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.currentLoginAt != null">
        current_login_at = #{record.currentLoginAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastLoginAt != null">
        last_login_at = #{record.lastLoginAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.currentLoginIp != null">
        current_login_ip = #{record.currentLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLoginIp != null">
        last_login_ip = #{record.lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creatorId != null">
        creator_id = #{record.creatorId,jdbcType=INTEGER},
      </if>
      <if test="record.updaterId != null">
        updater_id = #{record.updaterId,jdbcType=INTEGER},
      </if>
      <if test="record.firstName != null">
        first_name = #{record.firstName,jdbcType=VARCHAR},
      </if>
      <if test="record.lastName != null">
        last_name = #{record.lastName,jdbcType=VARCHAR},
      </if>
      <if test="record.userLoggedIn != null">
        user_logged_in = #{record.userLoggedIn,jdbcType=TINYINT},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=BIGINT},
      </if>
      <if test="record.groupId != null">
        group_id = #{record.groupId,jdbcType=BIGINT},
      </if>
      <if test="record.taskAddEmail != null">
        task_add_email = #{record.taskAddEmail,jdbcType=BIT},
      </if>
      <if test="record.taskUpdateEmail != null">
        task_update_email = #{record.taskUpdateEmail,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 04 15:35:42 BST 2013.
    -->
    update users
    set id = #{record.id,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      profileImage = #{record.profileimage,jdbcType=VARCHAR},
      crypted_password = #{record.cryptedPassword,jdbcType=VARCHAR},
      password_salt = #{record.passwordSalt,jdbcType=VARCHAR},
      persistence_token = #{record.persistenceToken,jdbcType=VARCHAR},
      region_id = #{record.regionId,jdbcType=BIGINT},
      job_title = #{record.jobTitle,jdbcType=VARCHAR},
      login_count = #{record.loginCount,jdbcType=INTEGER},
      failed_login_count = #{record.failedLoginCount,jdbcType=INTEGER},
      last_request_at = #{record.lastRequestAt,jdbcType=TIMESTAMP},
      current_login_at = #{record.currentLoginAt,jdbcType=TIMESTAMP},
      last_login_at = #{record.lastLoginAt,jdbcType=TIMESTAMP},
      current_login_ip = #{record.currentLoginIp,jdbcType=VARCHAR},
      last_login_ip = #{record.lastLoginIp,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      creator_id = #{record.creatorId,jdbcType=INTEGER},
      updater_id = #{record.updaterId,jdbcType=INTEGER},
      first_name = #{record.firstName,jdbcType=VARCHAR},
      last_name = #{record.lastName,jdbcType=VARCHAR},
      user_logged_in = #{record.userLoggedIn,jdbcType=TINYINT},
      user_type = #{record.userType,jdbcType=BIGINT},
      group_id = #{record.groupId,jdbcType=BIGINT},
      task_add_email = #{record.taskAddEmail,jdbcType=BIT},
      task_update_email = #{record.taskUpdateEmail,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jemmmedia.organise.service.impl.db.mybatis.model.User">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 04 15:35:42 BST 2013.
    -->
    update users
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="profileimage != null">
        profileImage = #{profileimage,jdbcType=VARCHAR},
      </if>
      <if test="cryptedPassword != null">
        crypted_password = #{cryptedPassword,jdbcType=VARCHAR},
      </if>
      <if test="passwordSalt != null">
        password_salt = #{passwordSalt,jdbcType=VARCHAR},
      </if>
      <if test="persistenceToken != null">
        persistence_token = #{persistenceToken,jdbcType=VARCHAR},
      </if>
      <if test="regionId != null">
        region_id = #{regionId,jdbcType=BIGINT},
      </if>
      <if test="jobTitle != null">
        job_title = #{jobTitle,jdbcType=VARCHAR},
      </if>
      <if test="loginCount != null">
        login_count = #{loginCount,jdbcType=INTEGER},
      </if>
      <if test="failedLoginCount != null">
        failed_login_count = #{failedLoginCount,jdbcType=INTEGER},
      </if>
      <if test="lastRequestAt != null">
        last_request_at = #{lastRequestAt,jdbcType=TIMESTAMP},
      </if>
      <if test="currentLoginAt != null">
        current_login_at = #{currentLoginAt,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginAt != null">
        last_login_at = #{lastLoginAt,jdbcType=TIMESTAMP},
      </if>
      <if test="currentLoginIp != null">
        current_login_ip = #{currentLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginIp != null">
        last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="updaterId != null">
        updater_id = #{updaterId,jdbcType=INTEGER},
      </if>
      <if test="firstName != null">
        first_name = #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null">
        last_name = #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="userLoggedIn != null">
        user_logged_in = #{userLoggedIn,jdbcType=TINYINT},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=BIGINT},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=BIGINT},
      </if>
      <if test="taskAddEmail != null">
        task_add_email = #{taskAddEmail,jdbcType=BIT},
      </if>
      <if test="taskUpdateEmail != null">
        task_update_email = #{taskUpdateEmail,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jemmmedia.organise.service.impl.db.mybatis.model.User">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 04 15:35:42 BST 2013.
    -->
    update users
    set username = #{username,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      profileImage = #{profileimage,jdbcType=VARCHAR},
      crypted_password = #{cryptedPassword,jdbcType=VARCHAR},
      password_salt = #{passwordSalt,jdbcType=VARCHAR},
      persistence_token = #{persistenceToken,jdbcType=VARCHAR},
      region_id = #{regionId,jdbcType=BIGINT},
      job_title = #{jobTitle,jdbcType=VARCHAR},
      login_count = #{loginCount,jdbcType=INTEGER},
      failed_login_count = #{failedLoginCount,jdbcType=INTEGER},
      last_request_at = #{lastRequestAt,jdbcType=TIMESTAMP},
      current_login_at = #{currentLoginAt,jdbcType=TIMESTAMP},
      last_login_at = #{lastLoginAt,jdbcType=TIMESTAMP},
      current_login_ip = #{currentLoginIp,jdbcType=VARCHAR},
      last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      creator_id = #{creatorId,jdbcType=INTEGER},
      updater_id = #{updaterId,jdbcType=INTEGER},
      first_name = #{firstName,jdbcType=VARCHAR},
      last_name = #{lastName,jdbcType=VARCHAR},
      user_logged_in = #{userLoggedIn,jdbcType=TINYINT},
      user_type = #{userType,jdbcType=BIGINT},
      group_id = #{groupId,jdbcType=BIGINT},
      task_add_email = #{taskAddEmail,jdbcType=BIT},
      task_update_email = #{taskUpdateEmail,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <resultMap id="UserDetailedResultMap" type="com.jemmmedia.organise.service.impl.bean.UserDetailedBean">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="profileImage" jdbcType="VARCHAR" property="profileimage" />
    <result column="crypted_password" jdbcType="VARCHAR" property="cryptedPassword" />
    <result column="password_salt" jdbcType="VARCHAR" property="passwordSalt" />
    <result column="persistence_token" jdbcType="VARCHAR" property="persistenceToken" />
    <result column="region_id" jdbcType="TINYINT" property="regionId" />
    <result column="job_title" jdbcType="VARCHAR" property="jobTitle" />
    <result column="login_count" jdbcType="INTEGER" property="loginCount" />
    <result column="failed_login_count" jdbcType="INTEGER" property="failedLoginCount" />
    <result column="last_request_at" jdbcType="TIMESTAMP" property="lastRequestAt" />
    <result column="current_login_at" jdbcType="TIMESTAMP" property="currentLoginAt" />
    <result column="last_login_at" jdbcType="TIMESTAMP" property="lastLoginAt" />
    <result column="current_login_ip" jdbcType="VARCHAR" property="currentLoginIp" />
    <result column="last_login_ip" jdbcType="VARCHAR" property="lastLoginIp" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="creator_id" jdbcType="INTEGER" property="creatorId" />
    <result column="updater_id" jdbcType="INTEGER" property="updaterId" />
    <result column="first_name" jdbcType="VARCHAR" property="firstName" />
    <result column="last_name" jdbcType="VARCHAR" property="lastName" />
    <result column="user_logged_in" jdbcType="TINYINT" property="userLoggedIn" />
    <result column="regionName" jdbcType="VARCHAR" property="regionName" />
    <result column="roleId" jdbcType="INTEGER" property="roleId" />
    <result column="roleName" jdbcType="VARCHAR" property="roleName" />
    <result column="group_id" jdbcType="BIGINT" property="groupId" />
    <result column="task_add_email" jdbcType="BIT" property="taskAddEmail" />
    <result column="task_update_email" jdbcType="BIT" property="taskUpdateEmail" />
    <result column="groupName" jdbcType="VARCHAR" property="groupName" />
    <result column="groupCreationDate" jdbcType="TIMESTAMP" property="groupCreationDate" />
    <result column="packageType" jdbcType="BIGINT" property="packageType" />
    <result column="subscrDate" jdbcType="TIMESTAMP" property="subscrDate" />
    <result column="allowedUsers" jdbcType="INTEGER" property="allowedUsers" />
    <result column="usersCount" jdbcType="INTEGER" property="usersCount" />
    <result column="topicsCount" jdbcType="INTEGER" property="topicsCount" />
    <result column="allowedStorage" jdbcType="INTEGER" property="allowedStorage" />
  </resultMap>
  
  <resultMap type="com.jemmmedia.organise.service.impl.bean.UserDetailedBean" id="UserDetailWithDeptsMap" extends="UserDetailedResultMap">
       <collection ofType="com.jemmmedia.organise.service.impl.db.mybatis.model.Dept" property="dept" notNullColumn="id" >
    	<result column="deptId" property="id" />
    	<result column="deptName" property="name" />    	
    </collection>      
  </resultMap>
  
  <select id="getUser" parameterType="string" resultMap="UserDetailWithDeptsMap">
	  select u.*,rs.id as roleId,rs.name as roleName,r.region_name as regionName,
	  g.name as groupName, g.created_at as groupCreationDate, 
	  g.package_id as packageType,g.subscr_date as subscrDate,
	  pp.storage_allowed as allowedStorage,d.id as deptId, d.name as deptName,
	  (select count(*) from users where group_id = g.id) as usersCount,
	  (select count(*) from feed_sources where group_id = g.id) as topicsCount
	  from users u 
	  inner join roles_users ru on u.id = ru.user_id
	  inner join roles rs on rs.id = ru.role_id 
	  inner join regions r on u.region_id = r.id
	  inner join groups g on u.group_id = g.id 
	  join packages_pricing pp on g.package_id = pp.id
	  left outer join dept_users du on du.user_id =  u.id 
 	  left join dept d on d.id = du.dept_id 
	  where email= #{username}  	
  </select>
  
  <select id="getUserPackage" parameterType="string" resultMap="UserDetailedResultMap">
  
  select count(u.id) as usersCount,p.users_allowed as allowedUsers 
  from users u 
  inner join groups g on u.group_id = g.id
  inner join packages_pricing p on g.package_id = p.id
  where g.id = #{groupId,jdbcType=BIGINT}
  	
  </select>
  
  <select id="selectAllUsersDetail" parameterType="map" resultMap="UserDetailWithDeptsMap">
  	
  	select u.*,r.id as regionId,r.region_name as regionName,rs.id as roleId, rs.name as roleName, d.id as deptId, d.name as deptName  from users u
  	inner join regions r on u.region_id = r.id
 	left join roles_users ru on  u.id = ru.user_id
 	left join roles rs on rs.id = ru.role_id 
 	left outer join dept_users du on du.user_id =  u.id 
 	left join dept d on d.id = du.dept_id  
 	WHERE user_type = 0 and u.group_id =#{groupId,jdbcType=BIGINT} 
 	<if test="ids != null">
 	 AND u.id not in
 		<foreach close=")" collection="ids" index="index" item="item" open="(" separator=",">
      		#{item}
   		 </foreach>;
 	</if>
 	
  	
  </select>
  
  <select id="selectCheckedUsers" parameterType="String" resultMap="BaseResultMap">
  
   select * from users where id in (#{usersId})
  
  </select>
  
  <select id="selectUnCheckedUsers" parameterType="map" resultMap="UserDetailedResultMap">
  
   SELECT u.*, r.region_name as regionName, task_add_email
	FROM users u
	inner join regions r on u.region_id = r.id
	inner join roles_users ru on  u.id = ru.user_id
	 where user_type = 0 and u.group_id = #{groupId,jdbcType=BIGINT} and ru.role_id > 0 
	 AND u.id 
	 <if test="usersId != null">
	     AND u.id not in
 		<foreach close=")" collection="usersId" index="index" item="item" open="(" separator=",">
      		#{item}
   		 </foreach> order by first_name
  	</if>
  </select>
  
  
  
  <select id="selectRoleForUser" parameterType="string" resultType="com.jemmmedia.organise.service.impl.db.mybatis.model.Roles">
  	
   select * from roles r, roles_users ru 
   WHERE r.id = ru.role_id 
   AND ru.user_id = #{id,jdbcType=INTEGER} 
   AND user_type=0 order by id limit 0,1; 
  	
  </select>
  
  <select id="getAllUsers" parameterType="map" resultMap="UserDetailedResultMap">
  	SELECT u.*, r.region_name as regionName, task_add_email
	FROM users u
	inner join regions r on u.region_id = r.id
	inner join roles_users ru on  u.id = ru.user_id
	 where user_type = 0 and u.group_id = #{groupId,jdbcType=BIGINT} and ru.role_id > 0 
	 <if test="ids != null">
 	 AND u.id not in
 		<foreach close=")" collection="ids" index="index" item="item" open="(" separator=",">
      		#{item}
   		 </foreach>
 	</if>
	 order by first_name
  </select>
  
  
   <select id="selectAllGroups" parameterType="string" resultMap="UserDetailedResultMap">
	  select distinct g.id as groupId, g.name as groupName,u.email,u.first_name as firstName,u.last_name as lastName, r.region_name as regionName, g.created_at as createdAt, 
	  (select fe.created_at from feed_entries fe inner join users us on fe.user_id = us.id where group_id=g.id order by created_at desc limit 0,1) as lastLoginAt
	  from groups g inner join users u on u.group_id = g.id
		inner join regions r on r.id = u.region_id 
		inner join roles_users ru on u.id = ru.user_id
		inner join roles rs on rs.id = ru.role_id  
		where rs.id=2 and g.id not in(1,2,4,5,7,13,19,20,21,30,60) group by g.name order by g.created_at desc; 
  </select>
    
  
  <select id="checkUserExist" parameterType="string" resultType="int">
  
  select count(*) from users where email = #{email,jdbcType=VARCHAR}
  
  </select>
  
  <select id="countByGroup" parameterType="java.lang.Long" resultType="java.lang.Integer">
  	select count(*) from users where user_type = 0 and group_id = #{groupId,jdbcType=BIGINT} 
  </select>
  
   <select id="selectUsersInRegion" parameterType="java.lang.Long" resultType="java.lang.Integer">
   	   	select count(*) from users where region_id = #{regionId,jdbcType=BIGINT} 	
   </select>
    
   <select id="selectSuperUersEmail" parameterType="java.lang.Long" resultType="String">
   		select GROUP_CONCAT(email) from users u 
		inner join groups g on g.id = u.group_id
		inner join roles_users ru on ru.user_id =u.id
		where ru.role_id=1 and u.group_id=#{groupId,jdbcType=BIGINT}    
   </select>

  
  <update id="taskAssignedEmail" parameterType="map">
  	
  	update users set task_add_email = #{taskAddEmail,jdbcType=BIT} where id = #{id,jdbcType=BIGINT}
  	
  </update>
  
  <update id="postTaskEmail" parameterType="map">
  	
  	update users set task_update_email = #{taskUpdateEmail,jdbcType=BIT} where id = #{id,jdbcType=BIGINT}
  	
  </update>
  
  <select id="selectUsersInTask" parameterType="map" resultMap="BaseResultMap">
      select distinct u.email, u.first_Name as firstName, u.last_name as lastName from feed_entries fe left join feed_entry_child fec on fe.id = fec.feed_id 
	  inner join users u on u.id = fe.user_id
	  where fec.parent_id =#{id,jdbcType=BIGINT} 
	  And u.id not in	  
	  <foreach collection="ids" open="(" close=")" separator="," item="item" index="index">
	      #{item}	      
	  </foreach>;
	  
  </select>
  
  <select id="filterUsers" parameterType="map" resultMap="BaseResultMap">
   
   select u.*,r.id as regionId,r.region_name as regionName,rs.id as roleId, rs.name as roleName, d.id as deptId, d.name as deptName  from users u
  	inner join regions r on u.region_id = r.id
 	left join roles_users ru on  u.id = ru.user_id
 	left join roles rs on rs.id = ru.role_id 
 	left outer join dept_users du on du.user_id =  u.id 
 	left join dept d on d.id = du.dept_id  
 	WHERE user_type = 0 and u.group_id =#{groupId,jdbcType=BIGINT} and (u.first_name like #{searchStr} or u.last_name like #{searchStr}) 
  </select> 
  
</mapper>