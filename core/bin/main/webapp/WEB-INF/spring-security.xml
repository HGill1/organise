<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util-3.1.xsd">

	<http pattern="/resources" security="none" />
	
	
	
	<http auto-config="true"  use-expressions="true">
		<intercept-url pattern="/login.htm" access="permitAll"/>
		<intercept-url pattern="/logout.htm" access="permitAll"/>
		<intercept-url pattern="/forgotPasswordForm" access="permitAll"/>
		<intercept-url pattern="/registrationForm" access="permitAll"/>
		<intercept-url pattern="/platinumPackageForm" access="permitAll"/>
		<intercept-url pattern="/home.htm" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/index.htm" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/addFeeds.htm" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/showAssignedTask" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/preferences" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/login" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/createUsers" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/manageSources" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/manageRegions" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/editSourcesForm" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/addSourcesForm" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/addSource" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/editSource" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/statsPage" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/upgradePackage" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/welcomePage" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/jemmadmin" access="hasRole('ROLE_SJADMIN')"/>
		<intercept-url pattern="/highriseSync" access="hasRole('ROLE_ADMIN')"/>
		
    	
		
		<form-login login-page="/login.htm" 
					authentication-failure-url="/loginfailed"
					default-target-url="/index.htm" 
					always-use-default-target="false"
					/>
				
		<access-denied-handler error-page="/logout.htm"/>
		
		<logout invalidate-session="true" 
			logout-url="/logout.htm"
			success-handler-ref="userController"/>
			<remember-me data-source-ref="datasource" />
	 <!--<remember-me user-service-ref="customUserDetailsService" key="89dqj219dn910lsAc12" use-secure-cookie="true"  token-validity-seconds="466560000"/>-->
	 <session-management session-authentication-strategy-ref="sas"/>
	</http>
	
	 
 <!-- <beans:bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
    	<beans:property name="userDetailsService" ref="customUserDetailsService"/>
    	<beans:property name="passwordEncoder" ref="customEnocdePassword"/>
    	<beans:property name="saltSource" ref="saltSource"/>
    	<beans:property name="preAuthenticationChecks" ref="expirationChecker"/>
	</beans:bean>
	<beans:bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">
		<beans:property name="userPropertyToUse" value="email"/>
	</beans:bean>
	<authentication-manager>
	    <authentication-provider ref="authenticationProvider" />
	</authentication-manager> -->  
	
	 
 <authentication-manager>
	        <authentication-provider user-service-ref="customUserDetailsService">
	        		<password-encoder ref="customEnocdePassword" >
	        			<salt-source user-property="email"/>
	        		</password-encoder>
	        </authentication-provider>
	</authentication-manager>  

	 <!-- <beans:bean id="expirationChecker" class="com.jemmmedia.organise.service.impl.utility.UserTrialPeriodExpirationChecker" />  -->
	<beans:bean id="customEnocdePassword" class="com.jemmmedia.organise.service.impl.service.impl.CustomEnocdePassword" />
	<beans:bean id="exceptionMapper" class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler" >
    <beans:property name="exceptionMappings">
        <beans:map>
            <beans:entry key="com.jemmmedia.organise.service.impl.exception.TrialPeriodExpiredException" value="/pricing"/>
            <beans:entry key="com.jemmmedia.organise.service.impl.exception.LoginException" value="/login?message=Invalid login"/>
        </beans:map>
    </beans:property>
	</beans:bean>
	
	<beans:bean id="sas"
      class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
    <beans:constructor-arg name="sessionRegistry" ref="sessionRegistry" />
    <beans:property name="maximumSessions" value="3" />
  </beans:bean>

  <beans:bean id="sessionRegistry"
      class="org.springframework.security.core.session.SessionRegistryImpl" />
	
	
</beans:beans>